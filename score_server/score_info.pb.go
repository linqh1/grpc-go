// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/score_info.proto

package score_server

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// @brief base_score_info
type BaseScoreInfoT struct {
	WinCount             *int32   `protobuf:"varint,1,opt,name=win_count,json=winCount" json:"win_count,omitempty"`
	LoseCount            *int32   `protobuf:"varint,2,opt,name=lose_count,json=loseCount" json:"lose_count,omitempty"`
	ExceptionCount       *int32   `protobuf:"varint,3,opt,name=exception_count,json=exceptionCount" json:"exception_count,omitempty"`
	KillCount            *int32   `protobuf:"varint,4,opt,name=kill_count,json=killCount" json:"kill_count,omitempty"`
	DeathCount           *int32   `protobuf:"varint,5,opt,name=death_count,json=deathCount" json:"death_count,omitempty"`
	AssistCount          *int32   `protobuf:"varint,6,opt,name=assist_count,json=assistCount" json:"assist_count,omitempty"`
	Rating               *int64   `protobuf:"varint,7,opt,name=rating" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseScoreInfoT) Reset()         { *m = BaseScoreInfoT{} }
func (m *BaseScoreInfoT) String() string { return proto.CompactTextString(m) }
func (*BaseScoreInfoT) ProtoMessage()    {}
func (*BaseScoreInfoT) Descriptor() ([]byte, []int) {
	return fileDescriptor_f61bc5937a0e558a, []int{0}
}

func (m *BaseScoreInfoT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseScoreInfoT.Unmarshal(m, b)
}
func (m *BaseScoreInfoT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseScoreInfoT.Marshal(b, m, deterministic)
}
func (m *BaseScoreInfoT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseScoreInfoT.Merge(m, src)
}
func (m *BaseScoreInfoT) XXX_Size() int {
	return xxx_messageInfo_BaseScoreInfoT.Size(m)
}
func (m *BaseScoreInfoT) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseScoreInfoT.DiscardUnknown(m)
}

var xxx_messageInfo_BaseScoreInfoT proto.InternalMessageInfo

func (m *BaseScoreInfoT) GetWinCount() int32 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

func (m *BaseScoreInfoT) GetLoseCount() int32 {
	if m != nil && m.LoseCount != nil {
		return *m.LoseCount
	}
	return 0
}

func (m *BaseScoreInfoT) GetExceptionCount() int32 {
	if m != nil && m.ExceptionCount != nil {
		return *m.ExceptionCount
	}
	return 0
}

func (m *BaseScoreInfoT) GetKillCount() int32 {
	if m != nil && m.KillCount != nil {
		return *m.KillCount
	}
	return 0
}

func (m *BaseScoreInfoT) GetDeathCount() int32 {
	if m != nil && m.DeathCount != nil {
		return *m.DeathCount
	}
	return 0
}

func (m *BaseScoreInfoT) GetAssistCount() int32 {
	if m != nil && m.AssistCount != nil {
		return *m.AssistCount
	}
	return 0
}

func (m *BaseScoreInfoT) GetRating() int64 {
	if m != nil && m.Rating != nil {
		return *m.Rating
	}
	return 0
}

func init() {
	proto.RegisterType((*BaseScoreInfoT)(nil), "score_server.base_score_info_t")
}

func init() { proto.RegisterFile("example/score_info.proto", fileDescriptor_f61bc5937a0e558a) }

var fileDescriptor_f61bc5937a0e558a = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8c, 0x41, 0x8e, 0x82, 0x30,
	0x18, 0x46, 0xd3, 0x61, 0x60, 0x86, 0x1f, 0x32, 0x93, 0x61, 0x31, 0x21, 0x31, 0x46, 0x74, 0x23,
	0x2b, 0x3d, 0x84, 0x37, 0xe0, 0x02, 0x4d, 0xc5, 0x5f, 0x6d, 0xac, 0x2d, 0x69, 0xab, 0x70, 0x6f,
	0x2f, 0x60, 0x68, 0x2b, 0x2e, 0xbf, 0xf7, 0x5e, 0x3e, 0x28, 0x71, 0x60, 0xd7, 0x4e, 0xe0, 0xd6,
	0xb4, 0x4a, 0x23, 0xe5, 0xf2, 0xa8, 0x36, 0x9d, 0x56, 0x56, 0x15, 0xb9, 0x27, 0x06, 0xf5, 0x1d,
	0xf5, 0xea, 0x41, 0xe0, 0x6f, 0xcf, 0x0c, 0xd2, 0x77, 0x47, 0x6d, 0x31, 0x83, 0xb4, 0xe7, 0x92,
	0xb6, 0xea, 0x26, 0x6d, 0x49, 0x2a, 0x52, 0xc7, 0xcd, 0x77, 0xcf, 0xe5, 0x6e, 0xdc, 0xc5, 0x1c,
	0x40, 0x28, 0x83, 0xc1, 0x7e, 0x38, 0x9b, 0x8e, 0xc4, 0xeb, 0x35, 0xfc, 0xe2, 0xd0, 0x62, 0x67,
	0xb9, 0x7a, 0x3d, 0x44, 0xae, 0xf9, 0x99, 0xf0, 0xf4, 0x73, 0xe1, 0x42, 0x84, 0xe6, 0xd3, 0xff,
	0x8c, 0xc4, 0xeb, 0x05, 0x64, 0x07, 0x64, 0xf6, 0x1c, 0x7c, 0xec, 0x3c, 0x38, 0xe4, 0x83, 0x25,
	0xe4, 0xcc, 0x18, 0x6e, 0x6c, 0x28, 0x12, 0x57, 0x64, 0x9e, 0xf9, 0xe4, 0x1f, 0x12, 0xcd, 0x2c,
	0x97, 0xa7, 0xf2, 0xab, 0x22, 0x75, 0xd4, 0x84, 0xf5, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x80, 0x05,
	0xe9, 0xa9, 0x1e, 0x01, 0x00, 0x00,
}
